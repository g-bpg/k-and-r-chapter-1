#!/bin/sh

which nawk >/dev/null 2>&1 && awk="nawk" || awk="awk"
if [ -e "./counter" ]; then
	counter="./counter"
else
	printf "Either change the \$counter variable within this wc implementation or cd to the folder where you've built counter.\n" >/dev/null
	exit 1
fi

usage() {
	printf "Usage: $argv0 [ -h ] [ FILE ... ]\n"
	exit 1
}

# this is the wrapper on counter that lets it act as a wc clone
# lacks some features compared to GNU, adds one or two
# - honestly you could probably implement wc in pure POSIX shell but it'd
#   probably be brutally slow

file=/dev/stdin # shouldfix, probablywontfix
counter_output="$("$counter" <"$file")"

# REEEEEEEE REPEATED CODE!!!!
  newlines=$(printf "$counter_output" | "$awk" '{ print $1 }')
     words=$(printf "$counter_output" | "$awk" '{ print $2 }')
     chars=$(printf "$counter_output" | "$awk" '{ print $3 }')
#    bytes=$(printf "$counter_output" | "$awk" '{ print $4 }')
maxlinelen=$(printf "$counter_output" | "$awk" '{ print $5 }')
      tabs=$(printf "$counter_output" | "$awk" '{ print $6 }')
    blanks=$(printf "$counter_output" | "$awk" '{ print $7 }')
# tag me with a fix if you have one. idk how to do this better.

printf "%4s %4s %4s\n" "$newlines" "$words" "$chars"
exit 0
